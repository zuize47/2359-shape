plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'groovy'
	id "net.ltgt.apt" version "0.21"
	id 'jacoco'
}

group = 'com.example'
version = '1.0'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}
ext {
	spockVersion = '1.3-groovy-2.5'
	jjwtVersion = '0.10.7'
	lombokVersion = '1.18.10'
	mapstructVersion = '1.3.1.Final'
    swaggerVersion = '2.9.2'
}

jar {
	baseName = 'server'
	version = '1.0'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
	implementation "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
	implementation "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"
	implementation 'com.h2database:h2'
	implementation 'org.cheffo:jeplite:0.8.7a'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"



    compileOnly ("io.springfox:springfox-swagger2:${swaggerVersion}"){
		exclude group: 'mapstruct'
	}
    compileOnly "io.springfox:springfox-swagger-ui:${swaggerVersion}"
	compileOnly 'org.codehaus.groovy:groovy-all:2.5.8'
	compileOnly "org.projectlombok:lombok:${lombokVersion}"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation "org.spockframework:spock-core:${spockVersion}"
	testImplementation "org.spockframework:spock-spring:${spockVersion}"
	testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.3.0"
	testImplementation ("com.athaydes:spock-reports:1.6.2"){
		transitive false
	}
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}"
}

jacocoTestReport {
	dependsOn test
//	reports {
//		xml.enabled false
//		csv.enabled false
//		html.enable true
//	}
}

test {
	useJUnitPlatform()
}
